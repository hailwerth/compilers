#INITPTRS: mov 0 0
mov 5 1  ;sets HP
mov 6 65535  ;sets SP
mov 7 65535  ;sets FP
#INITMAIN: mov 0 0
str 6 0 0  ;sets main var 0 to zero
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
str 6 0 0  ;sets main var 1 to zero
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
str 6 0 0  ;sets main var 2 to zero
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
str 6 0 0  ;sets main var 3 to zero
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
str 6 0 0  ;sets main var 4 to zero
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
str 6 0 0  ;sets main var 5 to zero
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
str 6 0 0  ;sets main var 6 to zero
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
str 6 0 0  ;sets main var 7 to zero
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
str 6 0 0  ;sets main var 8 to zero
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
str 6 0 0  ;sets main var 9 to zero
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
#MAINEXPRS: mov 0 0
mov 0 0    ;ASSIGN-START
mov 0 0    ;NATLIT-START
mov 1 1    ;natlit-set
str 6 0 1  ;NATLIT-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 65533    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ASSIGN-START
mov 0 0    ;NATLIT-START
mov 1 10000    ;natlit-set
str 6 0 1  ;NATLIT-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 65532    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ASSIGN-START
mov 0 0  ;NEW-START
mov 1 1  ;new-set-1
str 5 0 0  ;new-alloc-0
add 5 5 1  ;new-incHP-0
str 5 0 0  ;new-alloc-1
add 5 5 1  ;new-incHP-1
mov 2 1    ;new-r2=type
str 5 0 2  ;new-store-type
str 6 0 5  ;new-push-stack
add 5 5 1  ;new-incHP
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0  ;NEW-END
mov 1 65528    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ASSIGN-START
mov 0 0    ;ID-START-LOCAL
mov 1 65528    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 65527    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
#LOOP0: mov 0 0       ;WHILE-START
mov 0 0    ;NATLIT-START
mov 1 0    ;natlit-set
str 6 0 1  ;NATLIT-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;ID-START-LOCAL
mov 1 65533    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
lod 1 6 2           ;LESS-START-load-e1
lod 2 6 1           ;less-load-e2
blt 1 2 #LESS0      ;less-cond-check
str 6 2 0           ;less-stores-zero
jmp 0 #LESSEND0     ;less-jmp-to-end
#LESS0: mov 1 1     ;less-sets-1
str 6 2 1           ;less-store-1
#LESSEND0: mov 0 0  ;less-end-noop
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
lod 1 6 1            ;AND-START-load-e1
mov 2 1              ;and-mov-1-into-r3
blt 1 2 #ANDZERO0    ;and-check-1
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ID-START-LOCAL
mov 1 65531    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;ID-START-LOCAL
mov 1 65532    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
lod 1 6 2           ;LESS-START-load-e1
lod 2 6 1           ;less-load-e2
blt 1 2 #LESS1      ;less-cond-check
str 6 2 0           ;less-stores-zero
jmp 0 #LESSEND1     ;less-jmp-to-end
#LESS1: mov 1 1     ;less-sets-1
str 6 2 1           ;less-store-1
#LESSEND1: mov 0 0  ;less-end-noop
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
lod 1 6 1            ;AND-START-load-e1
mov 2 1              ;and-mov-1-into-r3
blt 1 2 #ANDZERO0    ;and-check-1
str 6 1 2            ;and-set-1
jmp 0 #ANDEND0       ;and-jmp-end
#ANDZERO0: str 6 1 0 ;and-set-zero
#ANDEND0: mov 0 0    ;AND-END
mov 1 1               ;while-cond-start
lod 2 6 1             ;while-load-conditional-outcome
blt 2 1 #LOOPEND0     ;while-cond-end
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ASSIGN-START
mov 0 0    ;READ-START
rdn 1      ;reads in
str 6 0 1  ;READ-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 65533    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ASSIGN-START
mov 0 0  ;METH-DOT-START
mov 0 0    ;ID-START-LOCAL
mov 1 65527    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
lod 2 6 1  ;meth-dot-load-var-addr
beq 0 2 #END  ;meth-dot-null-check
mov 1 #METHRET0  ;meth-dot-mov-ra
str 6 0 1  ;meth-dot-push-ra
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
str 6 0 2  ;meth-dot-push-caller-addr
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 1
str 6 0 1
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 0
str 6 0 1
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;ID-START-LOCAL
mov 1 65533    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 1  ;arlist-mov-count
str 6 0 1  ;arglist-push-arg-count
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
jmp 0 #VTABLE
#METHRET0: mov 0 0  ;METH-DOT-END
mov 1 65527    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ASSIGN-START
mov 0 0    ;ID-START-LOCAL
mov 1 65531    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;NATLIT-START
mov 1 1    ;natlit-set
str 6 0 1  ;NATLIT-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;PLUS-START
lod 1 6 2  ;plus-load e1
lod 2 6 1  ;plus-load e2
add 1 1 2  ;plus-add e1+e2
str 6 2 1  ;PLUS-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 1 65531    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
jmp 0 #LOOP0          ;loop-jmp-end
#LOOPEND0: str 6 1 0  ;WHILE-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ASSIGN-START
mov 0 0    ;ID-START-LOCAL
mov 1 65531    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;NATLIT-START
mov 1 1    ;natlit-set
str 6 0 1  ;NATLIT-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;MINUS-START
lod 1 6 2  ;minus-load e1
lod 2 6 1  ;minus-load e2
sub 1 1 2  ;minus-minus e1+e2
str 6 2 1  ;MINUS-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 1 65531    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ASSIGN-START
mov 0 0    ;READ-START
rdn 1      ;reads in
str 6 0 1  ;READ-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 65535    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ASSIGN-START
mov 0 0    ;READ-START
rdn 1      ;reads in
str 6 0 1  ;READ-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 65534    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ID-START-LOCAL
mov 1 65535    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;ID-START-LOCAL
mov 1 65531    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
lod 1 6 2           ;LESS-START-load-e1
lod 2 6 1           ;less-load-e2
blt 1 2 #LESS2      ;less-cond-check
str 6 2 0           ;less-stores-zero
jmp 0 #LESSEND2     ;less-jmp-to-end
#LESS2: mov 1 1     ;less-sets-1
str 6 2 1           ;less-store-1
#LESSEND2: mov 0 0  ;less-end-noop
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
lod 1 6 1            ;AND-START-load-e1
mov 2 1              ;and-mov-1-into-r3
blt 1 2 #ANDZERO1    ;and-check-1
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ID-START-LOCAL
mov 1 65534    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;ID-START-LOCAL
mov 1 65531    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
lod 1 6 2           ;LESS-START-load-e1
lod 2 6 1           ;less-load-e2
blt 1 2 #LESS3      ;less-cond-check
str 6 2 0           ;less-stores-zero
jmp 0 #LESSEND3     ;less-jmp-to-end
#LESS3: mov 1 1     ;less-sets-1
str 6 2 1           ;less-store-1
#LESSEND3: mov 0 0  ;less-end-noop
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
lod 1 6 1            ;AND-START-load-e1
mov 2 1              ;and-mov-1-into-r3
blt 1 2 #ANDZERO1    ;and-check-1
str 6 1 2            ;and-set-1
jmp 0 #ANDEND1       ;and-jmp-end
#ANDZERO1: str 6 1 0 ;and-set-zero
#ANDEND1: mov 0 0    ;AND-END
lod 1 6 1            ;NOT-START-load-expr
beq 1 0 #NOT0        ;not-cond
str 6 1 0            ;not-set-zero
jmp 0 #NOTEND0       ;not-jmp-end
#NOT0: mov 1 1       ;not-set-r1=1
str 6 1 1            ;not-set-1
#NOTEND0: mov 0 0    ;NOT-END
lod 1 6 1      ;IF-START
beq 1 0 #IF0   ;if-cond
mov 0 0    ;NATLIT-START
mov 1 0    ;natlit-set
str 6 0 1  ;NATLIT-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;PRINT-START
lod 1 6 1  ;print-ready
ptn 1      ;PRINT-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;NATLIT-START
mov 1 0    ;natlit-set
str 6 0 1  ;NATLIT-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;PRINT-START
lod 1 6 1  ;print-ready
ptn 1      ;PRINT-END
lod 1 6 1
str 6 2 1
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
jmp 0 #IFEND0  ;if-jmp-end
#IF0: mov 0 0  ;if-else-start
mov 0 0    ;ASSIGN-START
mov 0 0    ;ID-START-LOCAL
mov 1 65528    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 65527    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ASSIGN-START
mov 0 0    ;NATLIT-START
mov 1 0    ;natlit-set
str 6 0 1  ;NATLIT-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 65531    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
#LOOP1: mov 0 0       ;WHILE-START
mov 0 0    ;ID-START-LOCAL
mov 1 65530    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
lod 1 6 1            ;AND-START-load-e1
mov 2 1              ;and-mov-1-into-r3
blt 1 2 #ANDZERO2    ;and-check-1
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ID-START-LOCAL
mov 1 65529    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
lod 1 6 1            ;AND-START-load-e1
mov 2 1              ;and-mov-1-into-r3
blt 1 2 #ANDZERO2    ;and-check-1
str 6 1 2            ;and-set-1
jmp 0 #ANDEND2       ;and-jmp-end
#ANDZERO2: str 6 1 0 ;and-set-zero
#ANDEND2: mov 0 0    ;AND-END
lod 1 6 1            ;NOT-START-load-expr
beq 1 0 #NOT1        ;not-cond
str 6 1 0            ;not-set-zero
jmp 0 #NOTEND1       ;not-jmp-end
#NOT1: mov 1 1       ;not-set-r1=1
str 6 1 1            ;not-set-1
#NOTEND1: mov 0 0    ;NOT-END
mov 1 1               ;while-cond-start
lod 2 6 1             ;while-load-conditional-outcome
blt 2 1 #LOOPEND1     ;while-cond-end
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ID-START-LOCAL
mov 1 65531    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;ID-START-LOCAL
mov 1 65535    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
lod 1 6 2            ;EQUAL-START-load-e1
lod 2 6 1            ;equal-load-e2
beq 1 2 #EQUAL0      ;equal-cond-check
str 6 2 0            ;equal-stores-zero
jmp 0 #EQUALEND0     ;equal-jmp-to-end
#EQUAL0: mov 1 1     ;equal-sets-1
str 6 2 1            ;equal-store-1
#EQUALEND0: mov 0 0  ;equal-end-noop
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
lod 1 6 1      ;IF-START
beq 1 0 #IF1   ;if-cond
mov 0 0    ;ASSIGN-START
mov 0 0  ;DOT-ID-START
mov 0 0    ;ID-START-LOCAL
mov 1 65527    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
lod 1 6 1  ;dot-id-null-check
beq 1 0 #END  ;dot-id-halt-if-null
mov 2 1  ;dot-id-sub-num
sub 1 1 2  ;dot-id-heap-address2read
lod 1 1 0   ;dot-id-loads-val
str 6 1 1  ;dot-id-push-val-stack
mov 0 0  ;DOT-ID-END
mov 1 65535    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ASSIGN-START
mov 0 0    ;NATLIT-START
mov 1 1    ;natlit-set
str 6 0 1  ;NATLIT-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 65530    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
lod 1 6 1
str 6 2 1
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
jmp 0 #IFEND1  ;if-jmp-end
#IF1: mov 0 0  ;if-else-start
mov 0 0    ;ASSIGN-START
mov 0 0    ;ID-START-LOCAL
mov 1 65530    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 65530    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
lod 1 6 1
str 6 2 1
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
#IFEND1: mov 0 0 ;IF-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ID-START-LOCAL
mov 1 65531    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;ID-START-LOCAL
mov 1 65534    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
lod 1 6 2            ;EQUAL-START-load-e1
lod 2 6 1            ;equal-load-e2
beq 1 2 #EQUAL1      ;equal-cond-check
str 6 2 0            ;equal-stores-zero
jmp 0 #EQUALEND1     ;equal-jmp-to-end
#EQUAL1: mov 1 1     ;equal-sets-1
str 6 2 1            ;equal-store-1
#EQUALEND1: mov 0 0  ;equal-end-noop
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
lod 1 6 1      ;IF-START
beq 1 0 #IF2   ;if-cond
mov 0 0    ;ASSIGN-START
mov 0 0  ;DOT-ID-START
mov 0 0    ;ID-START-LOCAL
mov 1 65527    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
lod 1 6 1  ;dot-id-null-check
beq 1 0 #END  ;dot-id-halt-if-null
mov 2 1  ;dot-id-sub-num
sub 1 1 2  ;dot-id-heap-address2read
lod 1 1 0   ;dot-id-loads-val
str 6 1 1  ;dot-id-push-val-stack
mov 0 0  ;DOT-ID-END
mov 1 65534    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ASSIGN-START
mov 0 0    ;NATLIT-START
mov 1 1    ;natlit-set
str 6 0 1  ;NATLIT-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 65529    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
lod 1 6 1
str 6 2 1
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
jmp 0 #IFEND2  ;if-jmp-end
#IF2: mov 0 0  ;if-else-start
mov 0 0    ;ASSIGN-START
mov 0 0    ;ID-START-LOCAL
mov 1 65529    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 65529    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
lod 1 6 1
str 6 2 1
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
#IFEND2: mov 0 0 ;IF-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ASSIGN-START
mov 0 0  ;DOT-ID-START
mov 0 0    ;ID-START-LOCAL
mov 1 65527    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
lod 1 6 1  ;dot-id-null-check
beq 1 0 #END  ;dot-id-halt-if-null
mov 2 2  ;dot-id-sub-num
sub 1 1 2  ;dot-id-heap-address2read
lod 1 1 0   ;dot-id-loads-val
str 6 1 1  ;dot-id-push-val-stack
mov 0 0  ;DOT-ID-END
mov 1 65527    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ASSIGN-START
mov 0 0    ;ID-START-LOCAL
mov 1 65531    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;NATLIT-START
mov 1 1    ;natlit-set
str 6 0 1  ;NATLIT-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;PLUS-START
lod 1 6 2  ;plus-load e1
lod 2 6 1  ;plus-load e2
add 1 1 2  ;plus-add e1+e2
str 6 2 1  ;PLUS-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 1 65531    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
jmp 0 #LOOP1          ;loop-jmp-end
#LOOPEND1: str 6 1 0  ;WHILE-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ASSIGN-START
mov 0 0  ;NEW-START
mov 1 1  ;new-set-1
str 5 0 0  ;new-alloc-0
add 5 5 1  ;new-incHP-0
str 5 0 0  ;new-alloc-1
add 5 5 1  ;new-incHP-1
mov 2 2    ;new-r2=type
str 5 0 2  ;new-store-type
str 6 0 5  ;new-push-stack
add 5 5 1  ;new-incHP
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0  ;NEW-END
mov 1 65526    ;assign-dest-address
lod 2 6 1  ;assign-expr-load
str 1 0 2  ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0  ;METH-DOT-START
mov 0 0    ;ID-START-LOCAL
mov 1 65526    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
lod 2 6 1  ;meth-dot-load-var-addr
beq 0 2 #END  ;meth-dot-null-check
mov 1 #METHRET1  ;meth-dot-mov-ra
str 6 0 1  ;meth-dot-push-ra
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
str 6 0 2  ;meth-dot-push-caller-addr
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 2
str 6 0 1
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 0
str 6 0 1
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;ID-START-LOCAL
mov 1 65535    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;ID-START-LOCAL
mov 1 65534    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 2  ;arlist-mov-count
str 6 0 1  ;arglist-push-arg-count
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
jmp 0 #VTABLE
#METHRET1: mov 0 0  ;METH-DOT-END
mov 0 0    ;PRINT-START
lod 1 6 1  ;print-ready
ptn 1      ;PRINT-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0  ;DOT-ID-START
mov 0 0    ;ID-START-LOCAL
mov 1 65526    ;id-load-stack-location
lod 1 1 0  ;id-load-from-stack
str 6 0 1  ;ID-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
lod 1 6 1  ;dot-id-null-check
beq 1 0 #END  ;dot-id-halt-if-null
mov 2 2  ;dot-id-sub-num
sub 1 1 2  ;dot-id-heap-address2read
lod 1 1 0   ;dot-id-loads-val
str 6 1 1  ;dot-id-push-val-stack
mov 0 0  ;DOT-ID-END
mov 0 0    ;PRINT-START
lod 1 6 1  ;print-ready
ptn 1      ;PRINT-END
lod 1 6 1
str 6 2 1
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
#IFEND0: mov 0 0 ;IF-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
ptn 6
#END: hlt 0  ;END OF PROGRAM
#Class1Method0: mov 0 0  ;c1m0-setup
mov 0 0  ;PROLOGUE-START
mov 0 0  ;PROLOGUE-END
str 6 0 7
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 6
add 1 1 6
mov 2 0
add 1 1 2
mov 2 1
add 1 1 2
add 7 1 0
mov 0 0  ;DOT-ASSIGN-START
mov 1 4
sub 1 7 1
lod 1 1 0
str 6 0 1
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0  ;THIS-START
mov 1 1
sub 1 7 1
lod 2 1 0
str 6 0 2
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0  ;THIS-END
lod 1 6 1  ;dot-assign-null-check
beq 1 0 #END  ;dot-assign-halt-if-null
lod 2 6 2  ;dot-assign-load-value2store
mov 3 1    ;dot-assign-offset
sub 1 1 3  ;dot-assign-heap-address2store
str 1 0 2  ;dot-assign-store-val
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0  ;DOT-ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0  ;DOT-ASSIGN-START
mov 0 0  ;NEW-START
mov 1 1  ;new-set-1
str 5 0 0  ;new-alloc-0
add 5 5 1  ;new-incHP-0
str 5 0 0  ;new-alloc-1
add 5 5 1  ;new-incHP-1
mov 2 1    ;new-r2=type
str 5 0 2  ;new-store-type
str 6 0 5  ;new-push-stack
add 5 5 1  ;new-incHP
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0  ;NEW-END
mov 0 0  ;THIS-START
mov 1 1
sub 1 7 1
lod 2 1 0
str 6 0 2
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0  ;THIS-END
lod 1 6 1  ;dot-assign-null-check
beq 1 0 #END  ;dot-assign-halt-if-null
lod 2 6 2  ;dot-assign-load-value2store
mov 3 2    ;dot-assign-offset
sub 1 1 3  ;dot-assign-heap-address2store
str 1 0 2  ;dot-assign-store-val
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0  ;DOT-ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0  ;DOT-ID-START
mov 0 0  ;THIS-START
mov 1 1
sub 1 7 1
lod 2 1 0
str 6 0 2
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0  ;THIS-END
lod 1 6 1  ;dot-id-null-check
beq 1 0 #END  ;dot-id-halt-if-null
mov 2 2  ;dot-id-sub-num
sub 1 1 2  ;dot-id-heap-address2read
lod 1 1 0   ;dot-id-loads-val
str 6 1 1  ;dot-id-push-val-stack
mov 0 0  ;DOT-ID-END
mov 0 0  ;EPILOGUE-START
lod 1 6 1
lod 2 6 2
lod 3 7 0
str 7 0 1
sub 6 6 6
add 6 7 0
sub 7 7 7
add 7 2 0
jmp 3 0  ;EPILOGUE-END
#Class2Method0: mov 0 0  ;c2m0-setup
mov 0 0  ;PROLOGUE-START
mov 0 0  ;PROLOGUE-END
str 6 0 7
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 6
add 1 1 6
mov 2 0
add 1 1 2
mov 2 2
add 1 1 2
add 7 1 0
#LOOP2: mov 0 0       ;WHILE-START
mov 1 5
sub 1 7 1
lod 1 1 0
str 6 0 1
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 4
sub 1 7 1
lod 1 1 0
str 6 0 1
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
lod 1 6 2           ;LESS-START-load-e1
lod 2 6 1           ;less-load-e2
blt 1 2 #LESS4      ;less-cond-check
str 6 2 0           ;less-stores-zero
jmp 0 #LESSEND4     ;less-jmp-to-end
#LESS4: mov 1 1     ;less-sets-1
str 6 2 1           ;less-store-1
#LESSEND4: mov 0 0  ;less-end-noop
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
lod 1 6 1            ;NOT-START-load-expr
beq 1 0 #NOT3        ;not-cond
str 6 1 0            ;not-set-zero
jmp 0 #NOTEND3       ;not-jmp-end
#NOT3: mov 1 1       ;not-set-r1=1
str 6 1 1            ;not-set-1
#NOTEND3: mov 0 0    ;NOT-END
lod 1 6 1            ;AND-START-load-e1
mov 2 1              ;and-mov-1-into-r3
blt 1 2 #ANDZERO3    ;and-check-1
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 1 5
sub 1 7 1
lod 1 1 0
str 6 0 1
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 4
sub 1 7 1
lod 1 1 0
str 6 0 1
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
lod 1 6 2            ;EQUAL-START-load-e1
lod 2 6 1            ;equal-load-e2
beq 1 2 #EQUAL2      ;equal-cond-check
str 6 2 0            ;equal-stores-zero
jmp 0 #EQUALEND2     ;equal-jmp-to-end
#EQUAL2: mov 1 1     ;equal-sets-1
str 6 2 1            ;equal-store-1
#EQUALEND2: mov 0 0  ;equal-end-noop
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
lod 1 6 1            ;NOT-START-load-expr
beq 1 0 #NOT4        ;not-cond
str 6 1 0            ;not-set-zero
jmp 0 #NOTEND4       ;not-jmp-end
#NOT4: mov 1 1       ;not-set-r1=1
str 6 1 1            ;not-set-1
#NOTEND4: mov 0 0    ;NOT-END
lod 1 6 1            ;AND-START-load-e1
mov 2 1              ;and-mov-1-into-r3
blt 1 2 #ANDZERO3    ;and-check-1
str 6 1 2            ;and-set-1
jmp 0 #ANDEND3       ;and-jmp-end
#ANDZERO3: str 6 1 0 ;and-set-zero
#ANDEND3: mov 0 0    ;AND-END
lod 1 6 1            ;NOT-START-load-expr
beq 1 0 #NOT2        ;not-cond
str 6 1 0            ;not-set-zero
jmp 0 #NOTEND2       ;not-jmp-end
#NOT2: mov 1 1       ;not-set-r1=1
str 6 1 1            ;not-set-1
#NOTEND2: mov 0 0    ;NOT-END
mov 1 1               ;while-cond-start
lod 2 6 1             ;while-load-conditional-outcome
blt 2 1 #LOOPEND2     ;while-cond-end
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0  ;DOT-ASSIGN-START
mov 0 0  ;DOT-ID-START
mov 0 0  ;THIS-START
mov 1 1
sub 1 7 1
lod 2 1 0
str 6 0 2
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0  ;THIS-END
lod 1 6 1  ;dot-id-null-check
beq 1 0 #END  ;dot-id-halt-if-null
mov 2 1  ;dot-id-sub-num
sub 1 1 2  ;dot-id-heap-address2read
lod 1 1 0   ;dot-id-loads-val
str 6 1 1  ;dot-id-push-val-stack
mov 0 0  ;DOT-ID-END
mov 0 0    ;NATLIT-START
mov 1 1    ;natlit-set
str 6 0 1  ;NATLIT-END
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;PLUS-START
lod 1 6 2  ;plus-load e1
lod 2 6 1  ;plus-load e2
add 1 1 2  ;plus-add e1+e2
str 6 2 1  ;PLUS-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0  ;THIS-START
mov 1 1
sub 1 7 1
lod 2 1 0
str 6 0 2
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0  ;THIS-END
lod 1 6 1  ;dot-assign-null-check
beq 1 0 #END  ;dot-assign-halt-if-null
lod 2 6 2  ;dot-assign-load-value2store
mov 3 1    ;dot-assign-offset
sub 1 1 3  ;dot-assign-heap-address2store
str 1 0 2  ;dot-assign-store-val
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0  ;DOT-ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0    ;ASSIGN-START
mov 1 4
sub 1 7 1
lod 1 1 0
str 6 0 1
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 1 5
sub 1 7 1
lod 1 1 0
str 6 0 1
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0    ;MINUS-START
lod 1 6 2  ;minus-load e1
lod 2 6 1  ;minus-load e2
sub 1 1 2  ;minus-minus e1+e2
str 6 2 1  ;MINUS-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 1 4
sub 1 7 1
lod 2 6 1
str 1 0 2
mov 0 0    ;ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
jmp 0 #LOOP2          ;loop-jmp-end
#LOOPEND2: str 6 1 0  ;WHILE-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0  ;DOT-ASSIGN-START
mov 1 4
sub 1 7 1
lod 1 1 0
str 6 0 1
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0  ;THIS-START
mov 1 1
sub 1 7 1
lod 2 1 0
str 6 0 2
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0  ;THIS-END
lod 1 6 1  ;dot-assign-null-check
beq 1 0 #END  ;dot-assign-halt-if-null
lod 2 6 2  ;dot-assign-load-value2store
mov 3 2    ;dot-assign-offset
sub 1 1 3  ;dot-assign-heap-address2store
str 1 0 2  ;dot-assign-store-val
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0  ;DOT-ASSIGN-END
mov 1 1    ;INCSP-START
add 6 6 1  ;INCSP-END
mov 0 0  ;DOT-ID-START
mov 0 0  ;THIS-START
mov 1 1
sub 1 7 1
lod 2 1 0
str 6 0 2
mov 1 1       ;DECSP-START
sub 6 6 1     ;decsp-sub
blt 6 5 #END  ;decsp-memcheck
beq 6 5 #END  ;DECSP-END
mov 0 0  ;THIS-END
lod 1 6 1  ;dot-id-null-check
beq 1 0 #END  ;dot-id-halt-if-null
mov 2 1  ;dot-id-sub-num
sub 1 1 2  ;dot-id-heap-address2read
lod 1 1 0   ;dot-id-loads-val
str 6 1 1  ;dot-id-push-val-stack
mov 0 0  ;DOT-ID-END
mov 0 0  ;EPILOGUE-START
lod 1 6 1
lod 2 6 2
lod 3 7 0
str 7 0 1
sub 6 6 6
add 6 7 0
sub 7 7 7
add 7 2 0
jmp 3 0  ;EPILOGUE-END
#VTABLE: mov 0 0 ;VTABLE-START
add 4 6 0
mov 1 1
add 4 4 1
lod 1 4 0
add 4 4 1
lod 3 4 1
lod 2 4 2
lod 1 4 3
lod 1 1 0
mov 4 1
beq 2 4 #VTCLASS1  ;vt-class-branch
mov 4 2
beq 2 4 #VTCLASS2  ;vt-class-branch
mov 4 777  ;vt-class-dne
ptn 4
jmp 0 #END
#VTCLASS1: mov 0 0
mov 4 0
beq 3 4 #VTCLASS1METH0
#VTCLASS2: mov 0 0
mov 4 0
beq 3 4 #VTCLASS2METH0
mov 4 777  ;vt-class-dne
ptn 4
jmp 0 #END  ;vt-meth-dne
#VTCLASS1METH0: mov 0 0 
mov 4 1
beq 1 4 #Class1Method0
#VTCLASS2METH0: mov 0 0 
mov 4 2
beq 1 4 #Class2Method0
mov 4 777  ;vt-class-dne
ptn 4
jmp 0 #END
